
遇到报错自动忽略

//1.//a  getA=f
console.log(getA); //un
if("a" in window){
  // a = "1"
    var a="1";
    function getA(a) {//"1" 
        a=a||this.a; 
        console.log(a);//"1"
    }
    getA(a);
}



//2.//a=2 4  obj1  fn1
var a=2;
var obj1={
    a:1,//3
    fn1:(function (a) {//2 3 4 5
        this.a=a;//this=>window.a = 2
        a++;
        return function () {
            this.a=a++;//this=>obj1.a = 3   this=>window.a = 4
            console.log(a);//4  5
        }
    })(a)
};
obj1.fn1();
var fn1=obj1.fn1;
fn1();



//3.//b= "b"     obj2 
var b="b";
var obj2={
    b:"B",//'是B'
    getB:function (b) {//'是'
        this.b=b+this.b;//this=>obj2.b = "是"+"B"="是B"     
        return this.b;//'是B'
    }
};
console.log(obj2.getB("是"));//'是B'



//4.//c=3 2  3 4   getC=f   obj3   f3
var c=3;
function getC() {
    this.c++;//this=>window.c   this=>obj3.c  this=>window
    return function (c) {
        c=this.c*2;
        console.log(c);
    }
}
var obj3={
    c:2,//3
    getC:(function () {
        this.c-=1;//this=>window.c = 2
        return this.getC;//window.getC
    })()
};
getC();//f(c)
obj3.getC();//
var f3=obj3.getC;
f3();
console.log(window.c);//4
console.log(obj3.c);//3

---

//5.//g1=f  obj4
function g1() {
    this.g="gg";//this=>obj4.g="gg"   给obj4新增键值对   this=>window.g="gg" 
}
var obj4={
    g1:g1,
    gg:function () {
        g1();
    }
};
obj4.g1();//this=>obj4.g="gg"   给obj4新增键值对
obj4.gg();//this=>window.g="gg"   给window新增键值对
console.log(obj4);//
console.log("g" in window);//true

// 6 //
f = function () {return true;};
g = function () {return false;};
(function () {
//g 
  if (g() && [] == ![]) {//g()  会报错  g is not a function
    f = function () {
      return false;
    };
    function g() {
      return true;
    };
  }
})();
f();
g();


//7 //number=2 4 8    obj   fn1 
  var number=2;
  var obj={
    number:4,//8
    fn1:(function () {
      //number -->NaN-->3-->9-->27
      this.number*=2;//this=>window.number
      number=number*2; 
      var number=3;
      return function () {
        this.number*=2;//this=>window.number  this=>obj.number
        number*=3;
        alert(number);//9  27
      }
    })()
  };
  var fn1=obj.fn1;
  alert(number);//4
  fn1();//
  obj.fn1();
  alert(window.number);//8
  alert(obj.number);//8